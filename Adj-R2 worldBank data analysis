---
title: "Relationship between internet use and suicide rates: an ecological anlaysis Using World Bank Data"
author: "HSS2021"
date: "2025-10-10"
output: word_document
---
 
# Research goal


To investigate the relationship between GDP per capita and a set of eight development indicators across countries, identifying which factors most strongly predict economic performance and exploring their policy implications.


## Methods
# install necessary libraries

```{r , echo=T, warning=F, include=T}
#options(repos = c(CRAN = "https://cloud.r-project.org"))
# Install pacman if you haven't already
#install.packages("pacman")

# Load pacman
library(pacman)

# Use pacman to load (and install if necessary) the packages
p_load(WDI, summarytools, reshape2,dplyr, tidyr, ggplot2, car, broom, jtools, gtsummary, modelsummary, broom, dplyr, purrr, gt)

```


## download the data
```{r, echo=T, warning=F}
indicators <- c(
  "NY.GDP.PCAP.CD",     # GDP per capita
  "SH.STA.SUIC.P5",     # Suicide mortality rate (per 100,000 population)
  "SP.POP.GROW",        # Population growth
  "SP.DYN.LE00.IN",     # Life expectancy
  "SE.ADT.LITR.ZS",     # Literacy rate
  "EG.ELC.ACCS.ZS",     # Access to electricity
  "IT.NET.USER.ZS",     # Internet users
  "SE.SEC.ENRR",        # Secondary school enrollment
  "SL.UEM.TOTL.ZS")

data_raw <- WDI(country = "all", indicator = indicators, start = 2015, end = 2023, extra = TRUE)

```

## clean colnames
```{r, echo=T, warning=F, include=F}
df <- data_raw %>%
  filter(region != "Aggregates") %>%
  rename(
    suicide = SH.STA.SUIC.P5,
    gdp = NY.GDP.PCAP.CD,
    pop_growth = SP.POP.GROW,
    life_exp = SP.DYN.LE00.IN,
    literacy = SE.ADT.LITR.ZS,
    electricity = EG.ELC.ACCS.ZS,
    internet = IT.NET.USER.ZS,
    school_enroll = SE.SEC.ENRR,
    unemployment = SL.UEM.TOTL.ZS) %>%
  select(
    iso2c, country, year,
    suicide, gdp,
    pop_growth, life_exp, literacy,
    electricity, internet, school_enroll, unemployment) %>%
  drop_na()

```

## change column type

```{r, echo=T, warning=F, include=F}
numeric_vars <- c(
  "suicide", "gdp", "pop_growth", "life_exp",
  "literacy", "electricity", "internet", "school_enroll", "unemployment")

data_scaled <- df %>%
  mutate(across(all_of(numeric_vars), ~ as.numeric(.))) %>%
  drop_na() %>%
  mutate(across(all_of(numeric_vars), scale))
        

```

# Descriptive analysis
```{r, echo=T}
df %>% select(-year) %>%  drop_na() %>% descr(stats = c("mean", "sd", 'min', 'max'),
      transpose = TRUE,
      headings  = T)

```

# correlation coefficient
```{r, dpi=400, fig.width=8, fig.height=7, echo=FALSE, include=F}
df %>%
    select(where(is.numeric)) %>%
    drop_na() %>%
    cor() %>%
    melt() %>%
    mutate(value = round(value, 2)) %>%
    ggplot(aes(Var1, Var2, fill = value)) +
    geom_tile(color = "white", linewidth = 0.5) +
    geom_text(aes(label = value), color = "black", size = 3.5) +
    scale_fill_gradient2(low = "#d73027", mid = "#f7f7f7", high = "#1a9850", midpoint = 0) +
    coord_fixed() +
    labs(x = NULL, y = NULL) +
    theme_minimal(base_size = 12) +
    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
        panel.grid = element_blank(),
        legend.position = "bottom")
```



# make the world map
```{r,  echo=F, warning=F,dpi=400, include=F}
pacman::p_load(dplyr, ggplot2, sf, rnaturalearth, rnaturalearthdata)

suicide_latest <- data_raw  %>%
  filter(region != "Aggregates") %>%
  filter(!is.na(SH.STA.SUIC.P5)) %>%
  group_by(iso3c) %>%
  filter(year == max(year, na.rm = TRUE)) %>%
  ungroup() %>%
  select(iso3c, country, year, suicide = SH.STA.SUIC.P5)

world <- ne_countries(scale = "medium", returnclass = "sf")

world_suicide <- left_join(world, suicide_latest, by = c("iso_a3" = "iso3c"))

ggplot(world_suicide) +
  geom_sf(aes(fill = suicide), color = "white", size = 0.1) +
  scale_fill_gradient(
    low = "#00BFC4", high = "#F8766D", na.value = "gray90",
    name = "Suicides per 100,000") +
  labs(title = "Global Suicide Mortality Rate \n(/100k population)") +
  theme_minimal(base_size = 14) +
  theme(legend.title = element_blank(),
    legend.position = "bottom",
    legend.key.width = unit(2.5, "cm"),
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    plot.subtitle = element_text(size = 12, hjust = 0.5),
    plot.caption = element_text(size = 10),
    axis.text = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank())

```


#run the model

```{r, echo=F, warning=F, include=FALSE}
model <- lm(suicide ~ gdp + life_exp + literacy + electricity + 
               school_enroll + unemployment, data = data_scaled)

model %>% summ()

```
 
```{r, echo=F, warning=F,include=F}

data_scaled <- data_scaled %>%  tidyr::drop_na()
models <- list(
 
  lm(gdp ~ pop_growth + life_exp + literacy + electricity + internet, data = data_scaled),
  lm(gdp ~  pop_growth + life_exp + literacy + electricity + internet + school_enroll, data = data_scaled),
  lm(gdp ~  pop_growth + life_exp + literacy + electricity + internet + school_enroll + unemployment, data = data_scaled))

tbls <- purrr::map(models, ~ 
  tbl_regression(.x, exponentiate = FALSE) %>% 
    modify_column_hide(columns = p.value) %>% 
    add_glance_table(include = c(r.squared, adj.r.squared)))

tbl_merged <- tbl_merge(tbls, tab_spanner = paste0("Model ", seq_along(tbls))) %>%
  modify_table_body(~ .x %>% dplyr::arrange(row_type == "glance_statistic"))

as_gt(tbl_merged) %>%
  gt::tab_caption("Table: Hierarchical Linear Models Predicting GDP per Capita")


```


```{r results='asis', include=T,echo=T, warning=FALSE}

 m5 <- lm(suicide ~ gdp  + pop_growth + life_exp + literacy, data = data_scaled)
m6 <- lm(suicide ~ gdp  + pop_growth + life_exp + literacy + electricity, data = data_scaled)
m7 <- lm(suicide ~ gdp  + pop_growth + life_exp + literacy + electricity + internet, data = data_scaled)
m8 <- lm(suicide ~ gdp  + pop_growth + life_exp + literacy + electricity + internet + school_enroll, data = data_scaled)
m9 <- lm(suicide ~ gdp  + pop_growth + life_exp + literacy + electricity + internet + school_enroll + unemployment, data = data_scaled)

models <- list(
  "Model 5" = m5,
  "Model 6" = m6,
  "Model 7" = m7,
  "Model 8" = m8,
  "Model 9" = m9
)

 modelsummary(
  models,
  stars = TRUE,
  fmt = 3,
  statistic = "({std.error})",
  gof_map = c("r.squared", "adj.r.squared"),
  gof_omit = "IC|Log|F|RMSE",
  title = "Hierarchical Linear Models Predicting Suicide Mortality Rate",
  coef_map = c(
    "gdp" = "GDP per Capita",
    "pop_growth" = "Population Growth",
    "life_exp" = "Life Expectancy",
    "literacy" = "Literacy Rate",
    "electricity" = "Access to Electricity",
    "internet" = "Internet Use",
    "school_enroll" = "School Enrollment",
    "unemployment" = "Unemployment Rate",
    "(Intercept)" = "Constant"),
  output = "markdown")

```


